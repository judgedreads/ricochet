#!/usr/bin/python

# Ricochet: A different angle on music.
# Copyright (C) 2013-2014 Pearce Dedmon

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import gi
gi.require_version('Gtk', '3.0')
gi.require_version('Notify', '0.7')

from gi.repository import (Gtk, Notify, Gio, GLib)
import os

from ricochet.browser import Browser
from ricochet import utils
from ricochet.control import Control


VERSION = '0.3.6'
print('Ricochet v%s' % VERSION)

settings = utils.get_settings()

from ricochet import mpdapi


class Ricochet(Gtk.Application):

    def __init__(self):
        Gtk.Application.__init__(self,
                                 application_id="apps.judgedreads.ricochet",
                                 flags=Gio.ApplicationFlags.FLAGS_NONE)
        GLib.set_application_name('Ricochet')
        GLib.set_prgname('Ricochet')
        self.connect("activate", self.on_activate)

    def on_key_press(self, widget, event, player):
        if event.hardware_keycode == 65:
            player.toggle()

    def on_activate(self, app):
        window = Gtk.ApplicationWindow()
        window.set_border_width(0)
        # window.set_icon_from_file("/opt/ricochet/images/ricochet.png")
        window.set_icon_name("ricochet")
        window.set_default_size(1000, 700)

        Notify.init('Ricochet')

        # TODO: pass settings to all classes?
        player = mpdapi.Player(settings)
        music = settings['music_dir']

        control = Control(player, settings)
        control.MUSIC_DIR = music

        utils.update_cache(settings)

        brow = Browser(control)
        cache_dir = '/home/judgedreads/.cache/ricochet/'
        for f in sorted(os.listdir(cache_dir)):
            album = f.replace('__', '/')
            cover = os.path.join(cache_dir, f)
            brow.add_album(album, cover)

        hbox = Gtk.Box()
        hbox.pack_start(control, False, False, 0)
        hbox.pack_start(brow, True, True, 0)
        brow.flowbox.get_child_at_index(0).grab_focus()

        window.add(hbox)
        window.connect("key-press-event", self.on_key_press, player)
        app.add_window(window)
        window.show_all()

if __name__ == "__main__":
    app = Ricochet()
    app.run(None)
